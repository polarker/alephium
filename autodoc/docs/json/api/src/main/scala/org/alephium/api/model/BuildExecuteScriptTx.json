{
  "fileName": "BuildExecuteScriptTx.scala",
  "filePath": "api/src/main/scala/org/alephium/api/model/BuildExecuteScriptTx.scala",
  "url": "https://github.com/alephium/alephium/blob/master/api/src/main/scala/org/alephium/api/model/BuildExecuteScriptTx.scala",
  "summary": "The `BuildExecuteScriptTx` class is a part of the Alephium project and is used to build and execute a transaction that involves executing a smart contract on the Alephium blockchain. \n\nThe class takes in several parameters, including the public key of the sender (`fromPublicKey`), the bytecode of the smart contract (`bytecode`), the amount of Alphium tokens to be sent (`attoAlphAmount`), and the gas amount and price for the transaction (`gasAmount` and `gasPrice`). \n\nThe `BuildExecuteScriptTx` class is a case class, which means that it is immutable and can be easily copied and modified. This is useful for building transactions incrementally, as each modification creates a new instance of the class with the updated parameters. \n\nThe class also extends the `BuildTxCommon` trait, which provides common functionality for building transactions. In addition, it implements the `FromPublicKey` trait, which specifies that the transaction must have a sender public key. \n\nOverall, the `BuildExecuteScriptTx` class is an important component of the Alephium project, as it allows developers to build and execute smart contract transactions on the blockchain. \n\nExample usage:\n\n```scala\nimport org.alephium.api.model.BuildExecuteScriptTx\nimport akka.util.ByteString\nimport org.alephium.protocol.vm.{GasBox, GasPrice}\nimport org.alephium.protocol.model.BlockHash\nimport org.alephium.util.AVector\n\nval senderPublicKey: ByteString = ByteString(\"...\")\nval bytecode: ByteString = ByteString(\"...\")\nval amount: Option[Amount] = Some(Amount(100))\nval tokens: Option[AVector[Token]] = None\nval gasAmount: Option[GasBox] = Some(GasBox(1000))\nval gasPrice: Option[GasPrice] = Some(GasPrice(10))\nval targetBlockHash: Option[BlockHash] = None\n\nval tx = BuildExecuteScriptTx(\n  fromPublicKey = senderPublicKey,\n  bytecode = bytecode,\n  attoAlphAmount = amount,\n  tokens = tokens,\n  gasAmount = gasAmount,\n  gasPrice = gasPrice,\n  targetBlockHash = targetBlockHash\n)\n```",
  "questions": "1. What is the purpose of the `BuildExecuteScriptTx` class?\n- The `BuildExecuteScriptTx` class is used to build and execute a transaction with a specified bytecode and other optional parameters.\n\n2. What is the significance of the `fromPublicKeyType` parameter?\n- The `fromPublicKeyType` parameter is an optional parameter that specifies the type of public key used in the transaction. If not specified, it defaults to `None`.\n\n3. What is the purpose of the `targetBlockHash` parameter?\n- The `targetBlockHash` parameter is an optional parameter that specifies the target block hash for the transaction. If not specified, it defaults to `None`."
}