{
  "fileName": "BuildSweepAddressTransactions.scala",
  "filePath": "api/src/main/scala/org/alephium/api/model/BuildSweepAddressTransactions.scala",
  "url": "https://github.com/alephium/alephium/blob/master/api/src/main/scala/org/alephium/api/model/BuildSweepAddressTransactions.scala",
  "summary": "The `BuildSweepAddressTransactions` class is a model used in the Alephium project to build transactions that sweep all assets from a given address to another address. \n\nThe class takes in several parameters, including the public key of the address to sweep from (`fromPublicKey`), the address to sweep to (`toAddress`), and optional parameters such as `lockTime`, `gasAmount`, `gasPrice`, and `targetBlockHash`. \n\nThe `lockTime` parameter specifies the time at which the transaction should be locked and can no longer be modified. The `gasAmount` parameter specifies the amount of gas to be used in the transaction, while the `gasPrice` parameter specifies the price of gas. The `targetBlockHash` parameter specifies the hash of the block to which the transaction should be added. \n\nThe `BuildSweepAddressTransactions` class extends the `BuildTxCommon` trait, which provides common functionality for building transactions. \n\nThis class can be used in the larger Alephium project to facilitate the transfer of assets between addresses. For example, a user may want to sweep all assets from an old address to a new address. They can use this class to build a transaction that accomplishes this task. \n\nExample usage:\n\n```\nval fromPublicKey = PublicKey(\"...\")\nval toAddress = Address.Asset(\"...\")\nval lockTime = Some(TimeStamp.now())\nval gasAmount = Some(GasBox(100))\nval gasPrice = Some(GasPrice(10))\nval targetBlockHash = Some(BlockHash(\"...\"))\n\nval sweepTx = BuildSweepAddressTransactions(\n  fromPublicKey,\n  toAddress,\n  lockTime,\n  gasAmount,\n  gasPrice,\n  targetBlockHash\n)\n```",
  "questions": "1. What is the purpose of the `BuildSweepAddressTransactions` case class?\n- The `BuildSweepAddressTransactions` case class is used to build transactions that sweep all assets from a given address to another address.\n\n2. What are the parameters of the `BuildSweepAddressTransactions` case class?\n- The parameters of the `BuildSweepAddressTransactions` case class are `fromPublicKey` (the public key of the address to sweep from), `toAddress` (the address to sweep to), `lockTime` (an optional timestamp to lock the transaction until), `gasAmount` (an optional gas box to pay for the transaction), `gasPrice` (an optional gas price to pay for the transaction), and `targetBlockHash` (an optional block hash to target for the transaction).\n\n3. What are the imported packages used in this file?\n- The imported packages used in this file are `org.alephium.protocol.PublicKey`, `org.alephium.protocol.model.{Address, BlockHash}`, `org.alephium.protocol.vm.{GasBox, GasPrice}`, and `org.alephium.util.TimeStamp`."
}