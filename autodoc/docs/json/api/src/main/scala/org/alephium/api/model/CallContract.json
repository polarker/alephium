{
  "fileName": "CallContract.scala",
  "filePath": "api/src/main/scala/org/alephium/api/model/CallContract.scala",
  "url": "https://github.com/alephium/alephium/blob/master/api/src/main/scala/org/alephium/api/model/CallContract.scala",
  "summary": "The `CallContract` and `MultipleCallContract` classes are part of the Alephium API model and are used to represent a call to a smart contract on the Alephium blockchain. \n\nThe `CallContract` class represents a single call to a smart contract and contains the following fields:\n- `group`: an integer representing the group index of the contract\n- `worldStateBlockHash`: an optional `BlockHash` representing the block hash of the world state to use for the call\n- `txId`: an optional `TransactionId` representing the transaction ID of the call\n- `address`: an `Address.Contract` representing the address of the contract to call\n- `methodIndex`: an integer representing the index of the method to call on the contract\n- `args`: an optional `AVector[Val]` representing the arguments to pass to the method\n- `existingContracts`: an optional `AVector[Address.Contract]` representing the addresses of any existing contracts that the called contract depends on\n- `inputAssets`: an optional `AVector[TestInputAsset]` representing any input assets to use for the call\n\nThe `validate()` method is used to validate the `CallContract` object and ensure that it is valid for execution. It takes a `BrokerConfig` object as an implicit parameter and returns a `Try[GroupIndex]` object. The method first checks that the `group` field is a valid group index. It then constructs a `ChainIndex` object from the `group` field and the same value, and checks that the `worldStateBlockHash` field, if present, corresponds to the constructed `ChainIndex`. If both checks pass, the method returns the `GroupIndex` corresponding to the `ChainIndex`.\n\nThe `MultipleCallContract` class represents a list of `CallContract` objects to execute in sequence. It contains a single field `calls`, which is an `AVector[CallContract]` representing the list of calls to execute.\n\nThese classes are used in the Alephium API to allow users to interact with smart contracts on the Alephium blockchain. Users can create `CallContract` objects to call methods on smart contracts and pass them to the appropriate API endpoint. The `validate()` method is used to ensure that the call is valid before executing it. The `MultipleCallContract` class is used to execute multiple calls in sequence.",
  "questions": "1. What is the purpose of the `CallContract` class?\n   - The `CallContract` class represents a call to a smart contract on the Alephium blockchain, including the contract address, method index, and optional arguments and input assets.\n2. What is the `validate` method used for?\n   - The `validate` method is used to validate the `CallContract` instance, checking that the specified group and world state block hash are valid and returning the corresponding `GroupIndex`.\n3. What is the `MultipleCallContract` class used for?\n   - The `MultipleCallContract` class represents a batch of multiple `CallContract` instances to be executed together on the Alephium blockchain."
}