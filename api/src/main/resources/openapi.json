{
  "openapi": "3.0.3",
  "info": {
    "title": "Alephium API",
    "version": "1.4.0"
  },
  "servers": [
    {
      "url": "{protocol}://{host}:{port}",
      "variables": {
        "protocol": {
          "enum": [
            "http",
            "https"
          ],
          "default": "http"
        },
        "host": {
          "default": "127.0.0.1"
        },
        "port": {
          "default": "12973"
        }
      }
    }
  ],
  "paths": {
    "/wallets": {
      "get": {
        "tags": [
          "Wallets"
        ],
        "summary": "List available wallets",
        "operationId": "getWallets",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WalletStatus"
                  }
                },
                "example": [
                  {
                    "walletName": "wallet-super-name",
                    "locked": true
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Wallets"
        ],
        "summary": "Restore a wallet from your mnemonic",
        "operationId": "putWallets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletRestore"
              },
              "examples": {
                "Example0": {
                  "summary": "User",
                  "value": {
                    "password": "my-secret-password",
                    "mnemonic": "vault alarm sad mass witness property virus style good flower rice alpha viable evidence run glare pretty scout evil judge enroll refuse another lava",
                    "walletName": "wallet-super-name"
                  }
                },
                "Example1": {
                  "summary": "Miner (w/o pass phrase)",
                  "value": {
                    "password": "my-secret-password",
                    "mnemonic": "vault alarm sad mass witness property virus style good flower rice alpha viable evidence run glare pretty scout evil judge enroll refuse another lava",
                    "walletName": "wallet-super-name",
                    "isMiner": true
                  }
                },
                "Example2": {
                  "summary": "Miner (with pass phrase)",
                  "value": {
                    "password": "my-secret-password",
                    "mnemonic": "vault alarm sad mass witness property virus style good flower rice alpha viable evidence run glare pretty scout evil judge enroll refuse another lava",
                    "walletName": "wallet-super-name",
                    "isMiner": true,
                    "mnemonicPassphrase": "optional-mnemonic-passphrase"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletRestoreResult"
                },
                "example": {
                  "walletName": "wallet-super-name"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Wallets"
        ],
        "summary": "Create a new wallet",
        "description": "A new wallet will be created and respond with a mnemonic. Make sure to keep that mnemonic safely as it will allows you to recover your wallet. Default mnemonic size is 24, (options: 12, 15, 18, 21, 24).",
        "operationId": "postWallets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletCreation"
              },
              "examples": {
                "Example0": {
                  "summary": "User",
                  "value": {
                    "password": "my-secret-password",
                    "walletName": "wallet-super-name"
                  }
                },
                "Example1": {
                  "summary": "Miner (w/o pass phrase)",
                  "value": {
                    "password": "my-secret-password",
                    "walletName": "wallet-super-name",
                    "isMiner": true,
                    "mnemonicSize": 24
                  }
                },
                "Example2": {
                  "summary": "Miner (with pass phrase)",
                  "value": {
                    "password": "my-secret-password",
                    "walletName": "wallet-super-name",
                    "isMiner": true,
                    "mnemonicPassphrase": "optional-mnemonic-passphrase",
                    "mnemonicSize": 24
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletCreationResult"
                },
                "example": {
                  "walletName": "wallet-super-name",
                  "mnemonic": "vault alarm sad mass witness property virus style good flower rice alpha viable evidence run glare pretty scout evil judge enroll refuse another lava"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}": {
      "get": {
        "tags": [
          "Wallets"
        ],
        "summary": "Get wallet's status",
        "operationId": "getWalletsWallet_name",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletStatus"
                },
                "example": {
                  "walletName": "wallet-super-name",
                  "locked": true
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Wallets"
        ],
        "summary": "Delete your wallet file (can be recovered with your mnemonic)",
        "operationId": "deleteWalletsWallet_name",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletDeletion"
              },
              "example": {
                "password": "my-secret-password"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}/lock": {
      "post": {
        "tags": [
          "Wallets"
        ],
        "summary": "Lock your wallet",
        "operationId": "postWalletsWallet_nameLock",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}/unlock": {
      "post": {
        "tags": [
          "Wallets"
        ],
        "summary": "Unlock your wallet",
        "operationId": "postWalletsWallet_nameUnlock",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletUnlock"
              },
              "examples": {
                "Example0": {
                  "summary": "Default",
                  "value": {
                    "password": "my-secret-password"
                  }
                },
                "Example1": {
                  "summary": "More Settings (with pass phrase)",
                  "value": {
                    "password": "my-secret-password",
                    "mnemonicPassphrase": "optional-mnemonic-passphrase"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}/balances": {
      "get": {
        "tags": [
          "Wallets"
        ],
        "summary": "Get your total balance",
        "operationId": "getWalletsWallet_nameBalances",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "utxosLimit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Format 1: `1000000000000000000`\n\nFormat 2: `x.y ALPH`, where `1 ALPH = 1000000000000000000`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Balances"
                },
                "example": {
                  "totalBalance": "10000000000000000000",
                  "totalBalanceHint": "10 ALPH",
                  "balances": [
                    {
                      "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                      "balance": "10000000000000000000",
                      "balanceHint": "10 ALPH",
                      "lockedBalance": "0",
                      "lockedBalanceHint": "0 ALPH"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}/reveal-mnemonic": {
      "post": {
        "tags": [
          "Wallets"
        ],
        "summary": "Reveal your mnemonic. !!! use it with caution !!!",
        "operationId": "postWalletsWallet_nameReveal-mnemonic",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevealMnemonic"
              },
              "example": {
                "password": "my-secret-password"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevealMnemonicResult"
                },
                "example": {
                  "mnemonic": "vault alarm sad mass witness property virus style good flower rice alpha viable evidence run glare pretty scout evil judge enroll refuse another lava"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}/transfer": {
      "post": {
        "tags": [
          "Wallets"
        ],
        "summary": "Transfer ALPH from the active address",
        "operationId": "postWalletsWallet_nameTransfer",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Format 1: `1000000000000000000`\n\nFormat 2: `x.y ALPH`, where `1 ALPH = 1000000000000000000`",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transfer"
              },
              "examples": {
                "Example0": {
                  "summary": "Default",
                  "value": {
                    "destinations": [
                      {
                        "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                        "alphAmount": "2000000000000000000"
                      }
                    ]
                  }
                },
                "Example1": {
                  "summary": "More settings",
                  "value": {
                    "destinations": [
                      {
                        "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                        "alphAmount": "2000000000000000000",
                        "tokens": [
                          {
                            "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                            "amount": "42000000000000000000"
                          },
                          {
                            "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                            "amount": "1000000000000000000000"
                          }
                        ],
                        "lockTime": 1611041396892
                      }
                    ],
                    "gas": 20000,
                    "gasPrice": "100000000000",
                    "utxosLimit": 512
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResult"
                },
                "example": {
                  "txId": "503bfb16230888af4924aa8f8250d7d348b862e267d75d3147f1998050b6da69",
                  "fromGroup": 2,
                  "toGroup": 1
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}/sweep-active-address": {
      "post": {
        "tags": [
          "Wallets"
        ],
        "summary": "Transfer all unlocked ALPH from the active address to another address",
        "operationId": "postWalletsWallet_nameSweep-active-address",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sweep"
              },
              "examples": {
                "Example0": {
                  "summary": "Default",
                  "value": {
                    "toAddress": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y"
                  }
                },
                "Example1": {
                  "summary": "More settings",
                  "value": {
                    "toAddress": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                    "lockTime": 1611041396892,
                    "gasAmount": 20000,
                    "gasPrice": "100000000000",
                    "utxosLimit": 512
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResults"
                },
                "example": {
                  "results": [
                    {
                      "txId": "503bfb16230888af4924aa8f8250d7d348b862e267d75d3147f1998050b6da69",
                      "fromGroup": 2,
                      "toGroup": 1
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}/sweep-all-addresses": {
      "post": {
        "tags": [
          "Wallets"
        ],
        "summary": "Transfer unlocked ALPH from all addresses (including all mining addresses if applicable) to another address",
        "operationId": "postWalletsWallet_nameSweep-all-addresses",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sweep"
              },
              "examples": {
                "Example0": {
                  "summary": "Default",
                  "value": {
                    "toAddress": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y"
                  }
                },
                "Example1": {
                  "summary": "More settings",
                  "value": {
                    "toAddress": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                    "lockTime": 1611041396892,
                    "gasAmount": 20000,
                    "gasPrice": "100000000000",
                    "utxosLimit": 512
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResults"
                },
                "example": {
                  "results": [
                    {
                      "txId": "503bfb16230888af4924aa8f8250d7d348b862e267d75d3147f1998050b6da69",
                      "fromGroup": 2,
                      "toGroup": 1
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}/sign": {
      "post": {
        "tags": [
          "Wallets"
        ],
        "summary": "Sign the given data and return back the signature",
        "operationId": "postWalletsWallet_nameSign",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sign"
              },
              "example": {
                "data": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignResult"
                },
                "example": {
                  "signature": "9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}/addresses": {
      "get": {
        "tags": [
          "Wallets"
        ],
        "summary": "List all your wallet's addresses",
        "operationId": "getWalletsWallet_nameAddresses",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Addresses"
                },
                "example": {
                  "activeAddress": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                  "addresses": [
                    {
                      "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                      "publicKey": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                      "group": 0,
                      "path": "m/44'/1234'/O'/O/O"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}/addresses/{address}": {
      "get": {
        "tags": [
          "Wallets"
        ],
        "summary": "Get address' info",
        "operationId": "getWalletsWallet_nameAddressesAddress",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressInfo"
                },
                "example": {
                  "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                  "publicKey": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                  "group": 0,
                  "path": "m/44'/1234'/O'/O/O"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}/miner-addresses": {
      "get": {
        "tags": [
          "Miners"
        ],
        "summary": "List all miner addresses per group",
        "description": "This endpoint can only be called if the wallet was created with the `isMiner = true` flag",
        "operationId": "getWalletsWallet_nameMiner-addresses",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MinerAddressesInfo"
                  }
                },
                "example": [
                  {
                    "addresses": [
                      {
                        "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                        "publicKey": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                        "group": 0,
                        "path": "m/44'/1234'/O'/O/O"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}/derive-next-address": {
      "post": {
        "tags": [
          "Wallets"
        ],
        "summary": "Derive your next address",
        "description": "Cannot be called from a miner wallet",
        "operationId": "postWalletsWallet_nameDerive-next-address",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressInfo"
                },
                "example": {
                  "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                  "publicKey": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                  "group": 0,
                  "path": "m/44'/1234'/O'/O/O"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}/derive-next-miner-addresses": {
      "post": {
        "tags": [
          "Miners"
        ],
        "summary": "Derive your next miner addresses for each group",
        "description": "Your wallet need to have been created with the miner flag set to true",
        "operationId": "postWalletsWallet_nameDerive-next-miner-addresses",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressInfo"
                  }
                },
                "example": [
                  {
                    "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                    "publicKey": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                    "group": 0,
                    "path": "m/44'/1234'/O'/O/O"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{wallet_name}/change-active-address": {
      "post": {
        "tags": [
          "Wallets"
        ],
        "summary": "Choose the active address",
        "operationId": "postWalletsWallet_nameChange-active-address",
        "parameters": [
          {
            "name": "wallet_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeActiveAddress"
              },
              "example": {
                "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/infos/node": {
      "get": {
        "tags": [
          "Infos"
        ],
        "summary": "Get info about that node",
        "operationId": "getInfosNode",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeInfo"
                },
                "example": {
                  "buildInfo": {
                    "releaseVersion": "1.2.3",
                    "commit": "47c01136d52cdf29062f6a3598a36ebc1e4dc57e"
                  },
                  "upnp": true,
                  "externalAddress": {
                    "addr": "1.2.3.4",
                    "port": 12344
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/infos/version": {
      "get": {
        "tags": [
          "Infos"
        ],
        "summary": "Get version about that node",
        "operationId": "getInfosVersion",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeVersion"
                },
                "example": {
                  "version": "v0.0.1"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/infos/chain-params": {
      "get": {
        "tags": [
          "Infos"
        ],
        "summary": "Get key params about your blockchain",
        "operationId": "getInfosChain-params",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChainParams"
                },
                "example": {
                  "networkId": 0,
                  "numZerosAtLeastInHash": 18,
                  "groupNumPerBroker": 1,
                  "groups": 2
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/infos/self-clique": {
      "get": {
        "tags": [
          "Infos"
        ],
        "summary": "Get info about your own clique",
        "operationId": "getInfosSelf-clique",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelfClique"
                },
                "example": {
                  "cliqueId": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                  "nodes": [
                    {
                      "address": "1.2.3.4",
                      "restPort": 12377,
                      "wsPort": 12366,
                      "minerApiPort": 12355
                    }
                  ],
                  "selfReady": true,
                  "synced": true
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/infos/inter-clique-peer-info": {
      "get": {
        "tags": [
          "Infos"
        ],
        "summary": "Get infos about the inter cliques",
        "operationId": "getInfosInter-clique-peer-info",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterCliquePeerInfo"
                  }
                },
                "example": [
                  {
                    "cliqueId": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                    "brokerId": 1,
                    "groupNumPerBroker": 1,
                    "address": {
                      "addr": "1.2.3.4",
                      "port": 12344
                    },
                    "isSynced": true,
                    "clientVersion": "v1.0.0"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/infos/discovered-neighbors": {
      "get": {
        "tags": [
          "Infos"
        ],
        "summary": "Get discovered neighbors",
        "operationId": "getInfosDiscovered-neighbors",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrokerInfo"
                  }
                },
                "example": [
                  {
                    "cliqueId": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                    "brokerId": 1,
                    "brokerNum": 1,
                    "address": {
                      "addr": "1.2.3.4",
                      "port": 12344
                    }
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/infos/misbehaviors": {
      "get": {
        "tags": [
          "Infos"
        ],
        "summary": "Get the misbehaviors of peers",
        "operationId": "getInfosMisbehaviors",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PeerMisbehavior"
                  }
                },
                "example": [
                  {
                    "peer": "1.2.3.4",
                    "status": {
                      "type": "Penalty",
                      "value": 42
                    }
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Infos"
        ],
        "summary": "Ban/Unban given peers",
        "operationId": "postInfosMisbehaviors",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MisbehaviorAction"
              },
              "examples": {
                "Example0": {
                  "summary": "Unban",
                  "value": {
                    "type": "Unban",
                    "peers": [
                      "1.2.3.4"
                    ]
                  }
                },
                "Example1": {
                  "summary": "Ban",
                  "value": {
                    "type": "Ban",
                    "peers": [
                      "1.2.3.4"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/infos/unreachable": {
      "get": {
        "tags": [
          "Infos"
        ],
        "summary": "Get the unreachable brokers",
        "operationId": "getInfosUnreachable",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "example": [
                  "1.2.3.4"
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/infos/discovery": {
      "post": {
        "tags": [
          "Infos"
        ],
        "summary": "Set brokers to be unreachable/reachable",
        "operationId": "postInfosDiscovery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoveryAction"
              },
              "examples": {
                "Example0": {
                  "summary": "Set unreachable",
                  "value": {
                    "type": "Unreachable",
                    "peers": [
                      "1.2.3.4"
                    ]
                  }
                },
                "Example1": {
                  "summary": "Set reachable",
                  "value": {
                    "type": "Reachable",
                    "peers": [
                      "1.2.3.4"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/infos/history-hashrate": {
      "get": {
        "tags": [
          "Infos"
        ],
        "summary": "Get history average hashrate on the given time interval",
        "operationId": "getInfosHistory-hashrate",
        "parameters": [
          {
            "name": "fromTs",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": "0"
            }
          },
          {
            "name": "toTs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": "0"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "hashrate": "100 MH/s"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/infos/current-hashrate": {
      "get": {
        "tags": [
          "Infos"
        ],
        "summary": "Get average hashrate from `now - timespan(millis)` to `now`",
        "operationId": "getInfosCurrent-hashrate",
        "parameters": [
          {
            "name": "timespan",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "hashrate": "100 MH/s"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/blockflow": {
      "get": {
        "tags": [
          "Blockflow"
        ],
        "summary": "List blocks on the given time interval",
        "operationId": "getBlockflow",
        "parameters": [
          {
            "name": "fromTs",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": "0"
            }
          },
          {
            "name": "toTs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": "0"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchResponse"
                },
                "example": {
                  "blocks": [
                    [
                      {
                        "hash": "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5",
                        "timestamp": 1611041396892,
                        "chainFrom": 1,
                        "chainTo": 2,
                        "height": 42,
                        "deps": [
                          "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5",
                          "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5"
                        ],
                        "transactions": [
                          {
                            "unsigned": {
                              "txId": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                              "version": 1,
                              "networkId": 1,
                              "gasAmount": 20000,
                              "gasPrice": "100000000000",
                              "inputs": [
                                {
                                  "outputRef": {
                                    "hint": 23412,
                                    "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                                  },
                                  "unlockScript": "00d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28"
                                }
                              ],
                              "fixedOutputs": [
                                {
                                  "hint": 1,
                                  "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                                  "alphAmount": "2000000000000000000",
                                  "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                                  "tokens": [
                                    {
                                      "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                                      "amount": "42000000000000000000"
                                    },
                                    {
                                      "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                                      "amount": "1000000000000000000000"
                                    }
                                  ],
                                  "lockTime": 1611041396892,
                                  "additionalData": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                                }
                              ]
                            },
                            "scriptExecutionOk": true,
                            "contractInputs": [
                              {
                                "hint": 23412,
                                "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                              }
                            ],
                            "generatedOutputs": [
                              {
                                "type": "AssetOutput",
                                "hint": 1,
                                "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                                "alphAmount": "2000000000000000000",
                                "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                                "tokens": [
                                  {
                                    "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                                    "amount": "42000000000000000000"
                                  },
                                  {
                                    "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                                    "amount": "1000000000000000000000"
                                  }
                                ],
                                "lockTime": 1611041396892,
                                "additionalData": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                              },
                              {
                                "type": "ContractOutput",
                                "hint": 1,
                                "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                                "alphAmount": "2000000000000000000",
                                "address": "uomjgUz6D4tLejTkQtbNJMY8apAjTm1bgQf7em1wDV7S",
                                "tokens": [
                                  {
                                    "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                                    "amount": "42000000000000000000"
                                  },
                                  {
                                    "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                                    "amount": "1000000000000000000000"
                                  }
                                ]
                              }
                            ],
                            "inputSignatures": [
                              "9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b"
                            ],
                            "scriptSignatures": [
                              "9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b"
                            ]
                          }
                        ],
                        "nonce": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                        "version": 1,
                        "depStateHash": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                        "txsHash": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                        "target": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                      }
                    ]
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/blockflow/blocks/{block_hash}": {
      "get": {
        "tags": [
          "Blockflow"
        ],
        "summary": "Get a block with hash",
        "operationId": "getBlockflowBlocksBlock_hash",
        "parameters": [
          {
            "name": "block_hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockEntry"
                },
                "example": {
                  "hash": "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5",
                  "timestamp": 1611041396892,
                  "chainFrom": 1,
                  "chainTo": 2,
                  "height": 42,
                  "deps": [
                    "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5",
                    "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5"
                  ],
                  "transactions": [
                    {
                      "unsigned": {
                        "txId": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                        "version": 1,
                        "networkId": 1,
                        "gasAmount": 20000,
                        "gasPrice": "100000000000",
                        "inputs": [
                          {
                            "outputRef": {
                              "hint": 23412,
                              "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                            },
                            "unlockScript": "00d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28"
                          }
                        ],
                        "fixedOutputs": [
                          {
                            "hint": 1,
                            "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                            "alphAmount": "2000000000000000000",
                            "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                            "tokens": [
                              {
                                "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                                "amount": "42000000000000000000"
                              },
                              {
                                "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                                "amount": "1000000000000000000000"
                              }
                            ],
                            "lockTime": 1611041396892,
                            "additionalData": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                          }
                        ]
                      },
                      "scriptExecutionOk": true,
                      "contractInputs": [
                        {
                          "hint": 23412,
                          "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                        }
                      ],
                      "generatedOutputs": [
                        {
                          "type": "AssetOutput",
                          "hint": 1,
                          "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                          "alphAmount": "2000000000000000000",
                          "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                          "tokens": [
                            {
                              "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                              "amount": "42000000000000000000"
                            },
                            {
                              "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                              "amount": "1000000000000000000000"
                            }
                          ],
                          "lockTime": 1611041396892,
                          "additionalData": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                        },
                        {
                          "type": "ContractOutput",
                          "hint": 1,
                          "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                          "alphAmount": "2000000000000000000",
                          "address": "uomjgUz6D4tLejTkQtbNJMY8apAjTm1bgQf7em1wDV7S",
                          "tokens": [
                            {
                              "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                              "amount": "42000000000000000000"
                            },
                            {
                              "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                              "amount": "1000000000000000000000"
                            }
                          ]
                        }
                      ],
                      "inputSignatures": [
                        "9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b"
                      ],
                      "scriptSignatures": [
                        "9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b"
                      ]
                    }
                  ],
                  "nonce": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                  "version": 1,
                  "depStateHash": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                  "txsHash": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                  "target": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/blockflow/is-block-in-main-chain": {
      "get": {
        "tags": [
          "Blockflow"
        ],
        "summary": "Check if the block is in main chain",
        "operationId": "getBlockflowIs-block-in-main-chain",
        "parameters": [
          {
            "name": "blockHash",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "example": true
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/addresses/{address}/balance": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get the balance of an address",
        "operationId": "getAddressesAddressBalance",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "utxosLimit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Format 1: `1000000000000000000`\n\nFormat 2: `x.y ALPH`, where `1 ALPH = 1000000000000000000`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Balance"
                },
                "examples": {
                  "Example0": {
                    "summary": "Default",
                    "value": {
                      "balance": "10000000000000000000",
                      "balanceHint": "10 ALPH",
                      "lockedBalance": "5000000000000000000",
                      "lockedBalanceHint": "5 ALPH",
                      "utxoNum": 3
                    }
                  },
                  "Example1": {
                    "summary": "More settings",
                    "value": {
                      "balance": "10000000000000000000",
                      "balanceHint": "10 ALPH",
                      "lockedBalance": "5000000000000000000",
                      "lockedBalanceHint": "5 ALPH",
                      "utxoNum": 3,
                      "warning": "Result might not include all utxos and is maybe unprecise"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/addresses/{address}/utxos": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get the UTXOs of an address",
        "operationId": "getAddressesAddressUtxos",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "utxosLimit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UTXOs"
                },
                "examples": {
                  "Example0": {
                    "summary": "Default",
                    "value": {
                      "utxos": [
                        {
                          "ref": {
                            "hint": 23412,
                            "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                          },
                          "amount": "10000000000000000000",
                          "tokens": [
                            {
                              "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                              "amount": "42000000000000000000"
                            },
                            {
                              "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                              "amount": "1000000000000000000000"
                            }
                          ],
                          "lockTime": 1611041396892,
                          "additionalData": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                        }
                      ]
                    }
                  },
                  "Example1": {
                    "summary": "More settings",
                    "value": {
                      "utxos": [
                        {
                          "ref": {
                            "hint": 23412,
                            "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                          },
                          "amount": "10000000000000000000",
                          "tokens": [
                            {
                              "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                              "amount": "42000000000000000000"
                            },
                            {
                              "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                              "amount": "1000000000000000000000"
                            }
                          ],
                          "lockTime": 1611041396892,
                          "additionalData": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                        }
                      ],
                      "warning": "Result might not contains all utxos"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/addresses/{address}/group": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get the group of an address",
        "operationId": "getAddressesAddressGroup",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                },
                "example": {
                  "group": 2
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/blockflow/hashes": {
      "get": {
        "tags": [
          "Blockflow"
        ],
        "summary": "Get all block's hashes at given height for given groups",
        "operationId": "getBlockflowHashes",
        "parameters": [
          {
            "name": "fromGroup",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "toGroup",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "height",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HashesAtHeight"
                },
                "example": {
                  "headers": [
                    "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5",
                    "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5",
                    "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/blockflow/chain-info": {
      "get": {
        "tags": [
          "Blockflow"
        ],
        "summary": "Get infos about the chain from the given groups",
        "operationId": "getBlockflowChain-info",
        "parameters": [
          {
            "name": "fromGroup",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "toGroup",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChainInfo"
                },
                "example": {
                  "currentHeight": 42
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/blockflow/headers/{block_hash}": {
      "get": {
        "tags": [
          "Blockflow"
        ],
        "summary": "Get block header",
        "operationId": "getBlockflowHeadersBlock_hash",
        "parameters": [
          {
            "name": "block_hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockHeaderEntry"
                },
                "example": {
                  "hash": "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5",
                  "timestamp": 1611041396892,
                  "chainFrom": 1,
                  "chainTo": 2,
                  "height": 42,
                  "deps": [
                    "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5",
                    "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/unconfirmed": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "List unconfirmed transactions",
        "operationId": "getTransactionsUnconfirmed",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnconfirmedTransactions"
                  }
                },
                "example": [
                  {
                    "fromGroup": 0,
                    "toGroup": 1,
                    "unconfirmedTransactions": [
                      {
                        "unsigned": {
                          "txId": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                          "version": 1,
                          "networkId": 1,
                          "gasAmount": 20000,
                          "gasPrice": "100000000000",
                          "inputs": [
                            {
                              "outputRef": {
                                "hint": 23412,
                                "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                              },
                              "unlockScript": "00d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28"
                            }
                          ],
                          "fixedOutputs": [
                            {
                              "hint": 1,
                              "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                              "alphAmount": "2000000000000000000",
                              "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                              "tokens": [
                                {
                                  "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                                  "amount": "42000000000000000000"
                                },
                                {
                                  "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                                  "amount": "1000000000000000000000"
                                }
                              ],
                              "lockTime": 1611041396892,
                              "additionalData": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                            }
                          ]
                        },
                        "inputSignatures": [
                          "9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b"
                        ],
                        "scriptSignatures": [
                          "9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b"
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/build": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Build an unsigned transaction to a number of recipients",
        "operationId": "postTransactionsBuild",
        "requestBody": {
          "description": "Format 1: `1000000000000000000`\n\nFormat 2: `x.y ALPH`, where `1 ALPH = 1000000000000000000`",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildTransaction"
              },
              "examples": {
                "Example0": {
                  "summary": "Default",
                  "value": {
                    "fromPublicKey": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                    "destinations": [
                      {
                        "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                        "alphAmount": "2000000000000000000"
                      }
                    ]
                  }
                },
                "Example1": {
                  "summary": "More settings",
                  "value": {
                    "fromPublicKey": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                    "destinations": [
                      {
                        "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                        "alphAmount": "2000000000000000000",
                        "tokens": [
                          {
                            "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                            "amount": "42000000000000000000"
                          },
                          {
                            "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                            "amount": "1000000000000000000000"
                          }
                        ],
                        "lockTime": 1611041396892
                      }
                    ],
                    "utxos": [
                      {
                        "hint": 23412,
                        "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                      }
                    ],
                    "gasAmount": 20000,
                    "gasPrice": "100000000000",
                    "utxosLimit": 512
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildTransactionResult"
                },
                "example": {
                  "unsignedTx": "35d1b2a520a0da34c5eb8d712aa9cc",
                  "gasAmount": 20000,
                  "gasPrice": "100000000000",
                  "txId": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                  "fromGroup": 2,
                  "toGroup": 1
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/sweep-address/build": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Build unsigned transactions to send all unlocked balanced of one address to another address",
        "operationId": "postTransactionsSweep-addressBuild",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSweepAddressTransactions"
              },
              "examples": {
                "Example0": {
                  "summary": "Default",
                  "value": {
                    "fromPublicKey": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                    "toAddress": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y"
                  }
                },
                "Example1": {
                  "summary": "More settings",
                  "value": {
                    "fromPublicKey": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                    "toAddress": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                    "lockTime": 1611041396892,
                    "gasAmount": 20000,
                    "gasPrice": "100000000000",
                    "utxosLimit": 512
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSweepAddressTransactionsResult"
                },
                "example": {
                  "unsignedTxs": [
                    {
                      "txId": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                      "unsignedTx": "35d1b2a520a0da34c5eb8d712aa9cc",
                      "gasAmount": 20000,
                      "gasPrice": "100000000000"
                    }
                  ],
                  "fromGroup": 2,
                  "toGroup": 1
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/submit": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Submit a signed transaction",
        "operationId": "postTransactionsSubmit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitTransaction"
              },
              "example": {
                "unsignedTx": "35d1b2a520a0da34c5eb8d712aa9cc",
                "signature": "9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxResult"
                },
                "example": {
                  "txId": "503bfb16230888af4924aa8f8250d7d348b862e267d75d3147f1998050b6da69",
                  "fromGroup": 2,
                  "toGroup": 1
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/decode-unsigned-tx": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Decode an unsigned transaction",
        "operationId": "postTransactionsDecode-unsigned-tx",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DecodeTransaction"
              },
              "example": {
                "unsignedTx": "35d1b2a520a0da34c5eb8d712aa9cc"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsignedTx"
                },
                "example": {
                  "txId": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                  "version": 1,
                  "networkId": 1,
                  "gasAmount": 20000,
                  "gasPrice": "100000000000",
                  "inputs": [
                    {
                      "outputRef": {
                        "hint": 23412,
                        "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                      },
                      "unlockScript": "00d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28"
                    }
                  ],
                  "fixedOutputs": [
                    {
                      "hint": 1,
                      "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                      "alphAmount": "2000000000000000000",
                      "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                      "tokens": [
                        {
                          "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                          "amount": "42000000000000000000"
                        },
                        {
                          "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                          "amount": "1000000000000000000000"
                        }
                      ],
                      "lockTime": 1611041396892,
                      "additionalData": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/status": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get tx status",
        "operationId": "getTransactionsStatus",
        "parameters": [
          {
            "name": "txId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromGroup",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "toGroup",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxStatus"
                },
                "examples": {
                  "Example0": {
                    "value": {
                      "type": "Confirmed",
                      "blockHash": "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5",
                      "txIndex": 0,
                      "chainConfirmations": 1,
                      "fromGroupConfirmations": 2,
                      "toGroupConfirmations": 3
                    }
                  },
                  "Example1": {
                    "summary": "Tx is still in mempool",
                    "value": {
                      "type": "MemPooled"
                    }
                  },
                  "Example2": {
                    "summary": "Cannot find tx with the id",
                    "value": {
                      "type": "TxNotFound"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/compile-script": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Compile a script",
        "operationId": "postContractsCompile-script",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Script"
              },
              "example": {
                "code": "TxScript Main { pub payable fn main() -> () { let token = Token(#36cdbfabca2d71622b6) token.withdraw(@1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y, 1024) } }"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompileResult"
                },
                "example": {
                  "bytecode": "35d1b2a520a0da34c5eb8d712aa9cc",
                  "codeHash": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                  "fields": {
                    "signature": "TxContract Foo(aa:Bool,mut bb:U256,cc:I256,mut dd:ByteVec,ee:Address)",
                    "types": [
                      "Bool",
                      "U256",
                      "I256",
                      "ByteVec",
                      "Address"
                    ]
                  },
                  "functions": [
                    {
                      "name": "bar",
                      "signature": "pub payable bar(a:Bool,mut b:U256,c:I256,mut d:ByteVec,e:Address)->(U256,I256,ByteVec,Address)",
                      "argTypes": [
                        "Bool",
                        "U256",
                        "I256",
                        "ByteVec",
                        "Address"
                      ],
                      "returnTypes": [
                        "U256",
                        "I256",
                        "ByteVec",
                        "Address"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "name": "Bar",
                      "signature": "event Bar(a:Bool,b:U256,d:ByteVec,e:Address)",
                      "fieldTypes": [
                        "Bool",
                        "U256",
                        "ByteVec",
                        "Address"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/unsigned-tx/build-script": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Build an unsigned script",
        "operationId": "postContractsUnsigned-txBuild-script",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildScriptTx"
              },
              "examples": {
                "Example0": {
                  "summary": "Default",
                  "value": {
                    "fromPublicKey": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                    "bytecode": "35d1b2a520a0da34c5eb8d712aa9cc"
                  }
                },
                "Example1": {
                  "summary": "More settings",
                  "value": {
                    "fromPublicKey": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                    "bytecode": "35d1b2a520a0da34c5eb8d712aa9cc",
                    "alphAmount": "1000000000000",
                    "tokens": [
                      {
                        "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                        "amount": "42000000000000000000"
                      },
                      {
                        "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                        "amount": "1000000000000000000000"
                      }
                    ],
                    "gasAmount": 20000,
                    "gasPrice": "100000000000",
                    "utxosLimit": 512
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildScriptTxResult"
                },
                "example": {
                  "unsignedTx": "35d1b2a520a0da34c5eb8d712aa9cc",
                  "gasAmount": 20000,
                  "gasPrice": "100000000000",
                  "txId": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                  "group": 2
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/compile-contract": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Compile a smart contract",
        "operationId": "postContractsCompile-contract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contract"
              },
              "example": {
                "code": "TxContract Foo(bar: ByteVec) {\npub payable fn baz(amount: U256) -> () {\nissueToken!(amount)\n}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompileResult"
                },
                "example": {
                  "bytecode": "35d1b2a520a0da34c5eb8d712aa9cc",
                  "codeHash": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                  "fields": {
                    "signature": "TxContract Foo(aa:Bool,mut bb:U256,cc:I256,mut dd:ByteVec,ee:Address)",
                    "types": [
                      "Bool",
                      "U256",
                      "I256",
                      "ByteVec",
                      "Address"
                    ]
                  },
                  "functions": [
                    {
                      "name": "bar",
                      "signature": "pub payable bar(a:Bool,mut b:U256,c:I256,mut d:ByteVec,e:Address)->(U256,I256,ByteVec,Address)",
                      "argTypes": [
                        "Bool",
                        "U256",
                        "I256",
                        "ByteVec",
                        "Address"
                      ],
                      "returnTypes": [
                        "U256",
                        "I256",
                        "ByteVec",
                        "Address"
                      ]
                    }
                  ],
                  "events": [
                    {
                      "name": "Bar",
                      "signature": "event Bar(a:Bool,b:U256,d:ByteVec,e:Address)",
                      "fieldTypes": [
                        "Bool",
                        "U256",
                        "ByteVec",
                        "Address"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/unsigned-tx/build-contract": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Build an unsigned contract",
        "operationId": "postContractsUnsigned-txBuild-contract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildContractDeployScriptTx"
              },
              "examples": {
                "Example0": {
                  "summary": "Default",
                  "value": {
                    "fromPublicKey": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                    "bytecode": "35d1b2a520a0da34c5eb8d712aa9cc"
                  }
                },
                "Example1": {
                  "summary": "More settings",
                  "value": {
                    "fromPublicKey": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                    "bytecode": "35d1b2a520a0da34c5eb8d712aa9cc",
                    "initialFields": [
                      {
                        "type": "Bool",
                        "value": true
                      },
                      {
                        "type": "U256",
                        "value": "123"
                      }
                    ],
                    "alphAmount": "2000000000000000000",
                    "issueTokenAmount": "2000000000000000000",
                    "gasAmount": 20000,
                    "gasPrice": "100000000000",
                    "utxosLimit": 512
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildContractDeployScriptTxResult"
                },
                "example": {
                  "group": 2,
                  "unsignedTx": "35d1b2a520a0da34c5eb8d712aa9cc",
                  "gasAmount": 20000,
                  "gasPrice": "100000000000",
                  "txId": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                  "contractAddress": "vSxdLL2kE3o6vJBdKkdgmS3W39G3ZEmFHpo2y1jnbzBq"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{address}/state": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get contract state",
        "operationId": "getContractsAddressState",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractState"
                },
                "example": {
                  "address": "vYZdgzNHHp7Qh9U5Rrv5H65eSJCGQTXEC4yuQCZ7mosA",
                  "bytecode": "00010700000000000118",
                  "codeHash": "c49d951065f85d0c673d33930e8476240c010a52313f99889ae06d9f0d92d2f9",
                  "fields": [
                    {
                      "type": "U256",
                      "value": "2000000000000000000"
                    }
                  ],
                  "asset": {
                    "alphAmount": "2000000000000000000",
                    "tokens": [
                      {
                        "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                        "amount": "2000000000"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/test-contract": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Test contract",
        "operationId": "postContractsTest-contract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestContract"
              },
              "example": {
                "group": 0,
                "address": "tgx7VNFoP9DJiFMFgXXtafQZkUvyEdDHT9ryamHJYrjq",
                "bytecode": "00010700000000000118",
                "initialFields": [
                  {
                    "type": "U256",
                    "value": "1000000000000000000"
                  }
                ],
                "initialAsset": {
                  "alphAmount": "1000000000000000000",
                  "tokens": [
                    {
                      "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                      "amount": "1000000000"
                    }
                  ]
                },
                "testMethodIndex": 0,
                "testArgs": [
                  {
                    "type": "U256",
                    "value": "1000000000000000000"
                  }
                ],
                "existingContracts": [
                  {
                    "address": "vYZdgzNHHp7Qh9U5Rrv5H65eSJCGQTXEC4yuQCZ7mosA",
                    "bytecode": "00010700000000000118",
                    "codeHash": "c49d951065f85d0c673d33930e8476240c010a52313f99889ae06d9f0d92d2f9",
                    "fields": [
                      {
                        "type": "U256",
                        "value": "2000000000000000000"
                      }
                    ],
                    "asset": {
                      "alphAmount": "2000000000000000000",
                      "tokens": [
                        {
                          "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                          "amount": "2000000000"
                        }
                      ]
                    }
                  }
                ],
                "inputAssets": [
                  {
                    "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                    "asset": {
                      "alphAmount": "3000000000000000000",
                      "tokens": [
                        {
                          "id": "20aa1fcc865087d7788302d087e4bc76691218ce5d5013dd1cedaabfac19cca4",
                          "amount": "3000000000"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestContractResult"
                },
                "example": {
                  "originalCodeHash": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                  "testCodeHash": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                  "returns": [
                    {
                      "type": "U256",
                      "value": "1000000000000000000"
                    }
                  ],
                  "gasUsed": 20000,
                  "contracts": [
                    {
                      "address": "vYZdgzNHHp7Qh9U5Rrv5H65eSJCGQTXEC4yuQCZ7mosA",
                      "bytecode": "00010700000000000118",
                      "codeHash": "c49d951065f85d0c673d33930e8476240c010a52313f99889ae06d9f0d92d2f9",
                      "fields": [
                        {
                          "type": "U256",
                          "value": "2000000000000000000"
                        }
                      ],
                      "asset": {
                        "alphAmount": "2000000000000000000",
                        "tokens": [
                          {
                            "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                            "amount": "2000000000"
                          }
                        ]
                      }
                    }
                  ],
                  "txOutputs": [
                    {
                      "type": "ContractOutput",
                      "hint": 1234,
                      "key": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                      "alphAmount": "1000000000000000000",
                      "address": "uomjgUz6D4tLejTkQtbNJMY8apAjTm1bgQf7em1wDV7S",
                      "tokens": [
                        {
                          "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                          "amount": "42000000000000000000"
                        },
                        {
                          "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                          "amount": "1000000000000000000000"
                        }
                      ]
                    }
                  ],
                  "events": [
                    {
                      "type": "ContractEvent",
                      "blockHash": "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5",
                      "contractAddress": "z69mxCq5vnw7UZdN2iUDi2jqGRpfnSmgAuouvPeUXeMn",
                      "txId": "109b05391a240a0d21671720f62fe39138aaca562676053900b348a51e11ba25",
                      "eventIndex": 1,
                      "fields": [
                        {
                          "type": "Address",
                          "value": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y"
                        },
                        {
                          "type": "U256",
                          "value": "10"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/multisig/address": {
      "post": {
        "tags": [
          "Multi-signature"
        ],
        "summary": "Create the multisig address and unlock script",
        "operationId": "postMultisigAddress",
        "requestBody": {
          "description": "Format 1: `1000000000000000000`\n\nFormat 2: `x.y ALPH`, where `1 ALPH = 1000000000000000000`",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildMultisigAddress"
              },
              "example": {
                "keys": [
                  "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28",
                  "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28"
                ],
                "mrequired": 1
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildMultisigAddressResult"
                },
                "example": {
                  "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/multisig/build": {
      "post": {
        "tags": [
          "Multi-signature"
        ],
        "summary": "Build a multisig unsigned transaction",
        "operationId": "postMultisigBuild",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildMultisig"
              },
              "examples": {
                "Example0": {
                  "summary": "Default",
                  "value": {
                    "fromAddress": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                    "fromPublicKeys": [
                      "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28"
                    ],
                    "destinations": [
                      {
                        "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                        "alphAmount": "2000000000000000000"
                      }
                    ]
                  }
                },
                "Example1": {
                  "summary": "More settings",
                  "value": {
                    "fromAddress": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                    "fromPublicKeys": [
                      "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28"
                    ],
                    "destinations": [
                      {
                        "address": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y",
                        "alphAmount": "2000000000000000000",
                        "tokens": [
                          {
                            "id": "2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd",
                            "amount": "42000000000000000000"
                          },
                          {
                            "id": "bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf",
                            "amount": "1000000000000000000000"
                          }
                        ],
                        "lockTime": 1611041396892
                      }
                    ],
                    "gas": 20000,
                    "gasPrice": "100000000000"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildTransactionResult"
                },
                "example": {
                  "unsignedTx": "35d1b2a520a0da34c5eb8d712aa9cc",
                  "gasAmount": 20000,
                  "gasPrice": "100000000000",
                  "txId": "798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef",
                  "fromGroup": 2,
                  "toGroup": 1
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/multisig/submit": {
      "post": {
        "tags": [
          "Multi-signature"
        ],
        "summary": "Submit a multi-signed transaction",
        "operationId": "postMultisigSubmit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitMultisig"
              },
              "example": {
                "unsignedTx": "35d1b2a520a0da34c5eb8d712aa9cc",
                "signatures": [
                  "9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxResult"
                },
                "example": {
                  "txId": "503bfb16230888af4924aa8f8250d7d348b862e267d75d3147f1998050b6da69",
                  "fromGroup": 2,
                  "toGroup": 1
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/utils/verify-signature": {
      "post": {
        "tags": [
          "Utils"
        ],
        "summary": "Verify the SecP256K1 signature of some data",
        "operationId": "postUtilsVerify-signature",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySignature"
              },
              "example": {
                "data": "35d1b2a520a0da34c5eb8d712aa9cc",
                "signature": "9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b",
                "publicKey": "d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "example": true
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/utils/check-hash-indexing": {
      "put": {
        "tags": [
          "Utils"
        ],
        "summary": "Check and repair the indexing of block hashes",
        "operationId": "putUtilsCheck-hash-indexing",
        "responses": {
          "200": {
            
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/miners/cpu-mining": {
      "post": {
        "tags": [
          "Miners"
        ],
        "summary": "Execute an action on CPU miner. !!! for test only !!!",
        "operationId": "postMinersCpu-mining",
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Start mining": {
                "value": "start-mining"
              },
              "Stop mining": {
                "value": "stop-mining"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                },
                "example": true
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/miners/addresses": {
      "get": {
        "tags": [
          "Miners"
        ],
        "summary": "List miner's addresses",
        "operationId": "getMinersAddresses",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MinerAddresses"
                },
                "example": {
                  "addresses": [
                    "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Miners"
        ],
        "summary": "Update miner's addresses, but better to use user.conf instead",
        "operationId": "putMinersAddresses",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MinerAddresses"
              },
              "example": {
                "addresses": [
                  "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/events/contract": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get events for a contract within a counter range",
        "operationId": "getEventsContract",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "contractAddress",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                },
                "example": {
                  "chainFrom": 0,
                  "chainTo": 1,
                  "events": [
                    {
                      "type": "ContractEvent",
                      "blockHash": "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5",
                      "contractAddress": "z69mxCq5vnw7UZdN2iUDi2jqGRpfnSmgAuouvPeUXeMn",
                      "txId": "109b05391a240a0d21671720f62fe39138aaca562676053900b348a51e11ba25",
                      "eventIndex": 1,
                      "fields": [
                        {
                          "type": "Address",
                          "value": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y"
                        },
                        {
                          "type": "U256",
                          "value": "10"
                        }
                      ]
                    }
                  ],
                  "nextStart": 2
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/events/contract/current-count": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get current value of the events counter for a contract",
        "operationId": "getEventsContractCurrent-count",
        "parameters": [
          {
            "name": "contractAddress",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                },
                "example": 100
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/events/tx-script": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get events for a TxScript",
        "operationId": "getEventsTx-script",
        "parameters": [
          {
            "name": "txId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                },
                "example": {
                  "chainFrom": 0,
                  "chainTo": 1,
                  "events": [
                    {
                      "type": "ContractEvent",
                      "blockHash": "bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5",
                      "contractAddress": "z69mxCq5vnw7UZdN2iUDi2jqGRpfnSmgAuouvPeUXeMn",
                      "txId": "109b05391a240a0d21671720f62fe39138aaca562676053900b348a51e11ba25",
                      "eventIndex": 1,
                      "fields": [
                        {
                          "type": "Address",
                          "value": "1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y"
                        },
                        {
                          "type": "U256",
                          "value": "10"
                        }
                      ]
                    }
                  ],
                  "nextStart": 2
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    },
    "/events/tx-script/current-count": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get current value of the events counter for a TxScript",
        "operationId": "getEventsTx-scriptCurrent-count",
        "parameters": [
          {
            "name": "txId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                },
                "example": 100
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "detail": "Something bad in the request"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                },
                "example": {
                  "detail": "Ouch"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                },
                "example": {
                  "resource": "wallet-name",
                  "detail": "wallet-name not found"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                },
                "example": {
                  "detail": "Self clique unsynced"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                },
                "example": {
                  "detail": "You shall not pass"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressBalance": {
        "required": [
          "address",
          "balance",
          "balanceHint",
          "lockedBalance",
          "lockedBalanceHint"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "balance": {
            "type": "string",
            "format": "uint256"
          },
          "balanceHint": {
            "type": "string",
            "format": "x.x ALPH"
          },
          "lockedBalance": {
            "type": "string",
            "format": "uint256"
          },
          "lockedBalanceHint": {
            "type": "string",
            "format": "x.x ALPH"
          },
          "warning": {
            "type": "string"
          }
        }
      },
      "AddressInfo": {
        "required": [
          "address",
          "publicKey",
          "group",
          "path"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          },
          "group": {
            "type": "integer"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "Addresses": {
        "required": [
          "activeAddress",
          "addresses"
        ],
        "type": "object",
        "properties": {
          "activeAddress": {
            "type": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressInfo"
            }
          }
        }
      },
      "AssetInput": {
        "required": [
          "outputRef",
          "unlockScript"
        ],
        "type": "object",
        "properties": {
          "outputRef": {
            "$ref": "#/components/schemas/OutputRef"
          },
          "unlockScript": {
            "type": "string"
          }
        }
      },
      "AssetOutput": {
        "required": [
          "hint",
          "key",
          "alphAmount",
          "address",
          "tokens",
          "lockTime",
          "additionalData",
          "type"
        ],
        "type": "object",
        "properties": {
          "hint": {
            "type": "integer"
          },
          "key": {
            "type": "string"
          },
          "alphAmount": {
            "type": "string",
            "format": "uint256"
          },
          "address": {
            "type": "string"
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token"
            }
          },
          "lockTime": {
            "type": "integer",
            "format": "int64"
          },
          "additionalData": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "AssetState": {
        "required": [
          "alphAmount",
          "tokens"
        ],
        "type": "object",
        "properties": {
          "alphAmount": {
            "type": "string",
            "format": "uint256"
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token"
            }
          }
        }
      },
      "BadRequest": {
        "required": [
          "detail"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          }
        }
      },
      "Balance": {
        "required": [
          "balance",
          "balanceHint",
          "lockedBalance",
          "lockedBalanceHint",
          "utxoNum"
        ],
        "type": "object",
        "properties": {
          "balance": {
            "type": "string",
            "format": "uint256"
          },
          "balanceHint": {
            "type": "string",
            "format": "x.x ALPH"
          },
          "lockedBalance": {
            "type": "string",
            "format": "uint256"
          },
          "lockedBalanceHint": {
            "type": "string",
            "format": "x.x ALPH"
          },
          "utxoNum": {
            "type": "integer"
          },
          "warning": {
            "type": "string"
          }
        }
      },
      "Balances": {
        "required": [
          "totalBalance",
          "totalBalanceHint",
          "balances"
        ],
        "type": "object",
        "properties": {
          "totalBalance": {
            "type": "string",
            "format": "uint256"
          },
          "totalBalanceHint": {
            "type": "string",
            "format": "x.x ALPH"
          },
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressBalance"
            }
          }
        }
      },
      "Ban": {
        "required": [
          "peers",
          "type"
        ],
        "type": "object",
        "properties": {
          "peers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Banned": {
        "required": [
          "until",
          "type"
        ],
        "type": "object",
        "properties": {
          "until": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "BlockEntry": {
        "required": [
          "hash",
          "timestamp",
          "chainFrom",
          "chainTo",
          "height",
          "deps",
          "transactions",
          "nonce",
          "version",
          "depStateHash",
          "txsHash",
          "target"
        ],
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "chainFrom": {
            "type": "integer"
          },
          "chainTo": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          },
          "deps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "nonce": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "depStateHash": {
            "type": "string"
          },
          "txsHash": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        }
      },
      "BlockHeaderEntry": {
        "required": [
          "hash",
          "timestamp",
          "chainFrom",
          "chainTo",
          "height",
          "deps"
        ],
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "chainFrom": {
            "type": "integer"
          },
          "chainTo": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          },
          "deps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BrokerInfo": {
        "required": [
          "cliqueId",
          "brokerId",
          "brokerNum",
          "address"
        ],
        "type": "object",
        "properties": {
          "cliqueId": {
            "type": "string"
          },
          "brokerId": {
            "type": "integer"
          },
          "brokerNum": {
            "type": "integer"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "BuildContractDeployScriptTx": {
        "required": [
          "fromPublicKey",
          "bytecode",
          "initialFields"
        ],
        "type": "object",
        "properties": {
          "fromPublicKey": {
            "type": "string"
          },
          "bytecode": {
            "type": "string"
          },
          "initialFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Val"
            }
          },
          "alphAmount": {
            "type": "string",
            "format": "uint256"
          },
          "issueTokenAmount": {
            "type": "string",
            "format": "uint256"
          },
          "gasAmount": {
            "type": "integer"
          },
          "gasPrice": {
            "type": "string",
            "format": "uint256"
          },
          "utxosLimit": {
            "type": "integer"
          }
        }
      },
      "BuildContractDeployScriptTxResult": {
        "required": [
          "group",
          "unsignedTx",
          "gasAmount",
          "gasPrice",
          "txId",
          "contractAddress"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "integer"
          },
          "unsignedTx": {
            "type": "string"
          },
          "gasAmount": {
            "type": "integer"
          },
          "gasPrice": {
            "type": "string",
            "format": "uint256"
          },
          "txId": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          }
        }
      },
      "BuildInfo": {
        "required": [
          "releaseVersion",
          "commit"
        ],
        "type": "object",
        "properties": {
          "releaseVersion": {
            "type": "string"
          },
          "commit": {
            "type": "string"
          }
        }
      },
      "BuildMultisig": {
        "required": [
          "fromAddress",
          "fromPublicKeys",
          "destinations"
        ],
        "type": "object",
        "properties": {
          "fromAddress": {
            "type": "string"
          },
          "fromPublicKeys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "destinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Destination"
            }
          },
          "gas": {
            "type": "integer"
          },
          "gasPrice": {
            "type": "string",
            "format": "uint256"
          },
          "utxosLimit": {
            "type": "integer"
          }
        }
      },
      "BuildMultisigAddress": {
        "required": [
          "keys",
          "mrequired"
        ],
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mrequired": {
            "type": "integer"
          }
        }
      },
      "BuildMultisigAddressResult": {
        "required": [
          "address"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          }
        }
      },
      "BuildScriptTx": {
        "required": [
          "fromPublicKey",
          "bytecode"
        ],
        "type": "object",
        "properties": {
          "fromPublicKey": {
            "type": "string"
          },
          "bytecode": {
            "type": "string"
          },
          "alphAmount": {
            "type": "string",
            "format": "uint256"
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token"
            }
          },
          "gasAmount": {
            "type": "integer"
          },
          "gasPrice": {
            "type": "string",
            "format": "uint256"
          },
          "utxosLimit": {
            "type": "integer"
          }
        }
      },
      "BuildScriptTxResult": {
        "required": [
          "unsignedTx",
          "gasAmount",
          "gasPrice",
          "txId",
          "group"
        ],
        "type": "object",
        "properties": {
          "unsignedTx": {
            "type": "string"
          },
          "gasAmount": {
            "type": "integer"
          },
          "gasPrice": {
            "type": "string",
            "format": "uint256"
          },
          "txId": {
            "type": "string"
          },
          "group": {
            "type": "integer"
          }
        }
      },
      "BuildSweepAddressTransactions": {
        "required": [
          "fromPublicKey",
          "toAddress"
        ],
        "type": "object",
        "properties": {
          "fromPublicKey": {
            "type": "string"
          },
          "toAddress": {
            "type": "string"
          },
          "lockTime": {
            "type": "integer",
            "format": "int64"
          },
          "gasAmount": {
            "type": "integer"
          },
          "gasPrice": {
            "type": "string",
            "format": "uint256"
          },
          "utxosLimit": {
            "type": "integer"
          }
        }
      },
      "BuildSweepAddressTransactionsResult": {
        "required": [
          "unsignedTxs",
          "fromGroup",
          "toGroup"
        ],
        "type": "object",
        "properties": {
          "unsignedTxs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SweepAddressTransaction"
            }
          },
          "fromGroup": {
            "type": "integer"
          },
          "toGroup": {
            "type": "integer"
          }
        }
      },
      "BuildTransaction": {
        "required": [
          "fromPublicKey",
          "destinations"
        ],
        "type": "object",
        "properties": {
          "fromPublicKey": {
            "type": "string"
          },
          "destinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Destination"
            }
          },
          "utxos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputRef"
            }
          },
          "gasAmount": {
            "type": "integer"
          },
          "gasPrice": {
            "type": "string",
            "format": "uint256"
          },
          "utxosLimit": {
            "type": "integer"
          }
        }
      },
      "BuildTransactionResult": {
        "required": [
          "unsignedTx",
          "gasAmount",
          "gasPrice",
          "txId",
          "fromGroup",
          "toGroup"
        ],
        "type": "object",
        "properties": {
          "unsignedTx": {
            "type": "string"
          },
          "gasAmount": {
            "type": "integer"
          },
          "gasPrice": {
            "type": "string",
            "format": "uint256"
          },
          "txId": {
            "type": "string"
          },
          "fromGroup": {
            "type": "integer"
          },
          "toGroup": {
            "type": "integer"
          }
        }
      },
      "ChainInfo": {
        "required": [
          "currentHeight"
        ],
        "type": "object",
        "properties": {
          "currentHeight": {
            "type": "integer"
          }
        }
      },
      "ChainParams": {
        "required": [
          "networkId",
          "numZerosAtLeastInHash",
          "groupNumPerBroker",
          "groups"
        ],
        "type": "object",
        "properties": {
          "networkId": {
            "type": "integer"
          },
          "numZerosAtLeastInHash": {
            "type": "integer"
          },
          "groupNumPerBroker": {
            "type": "integer"
          },
          "groups": {
            "type": "integer"
          }
        }
      },
      "ChangeActiveAddress": {
        "required": [
          "address"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          }
        }
      },
      "CompileResult": {
        "required": [
          "bytecode",
          "codeHash",
          "fields",
          "functions",
          "events"
        ],
        "type": "object",
        "properties": {
          "bytecode": {
            "type": "string"
          },
          "codeHash": {
            "type": "string"
          },
          "fields": {
            "$ref": "#/components/schemas/FieldsSig"
          },
          "functions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FunctionSig"
            }
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventSig"
            }
          }
        }
      },
      "Confirmed": {
        "required": [
          "blockHash",
          "txIndex",
          "chainConfirmations",
          "fromGroupConfirmations",
          "toGroupConfirmations",
          "type"
        ],
        "type": "object",
        "properties": {
          "blockHash": {
            "type": "string"
          },
          "txIndex": {
            "type": "integer"
          },
          "chainConfirmations": {
            "type": "integer"
          },
          "fromGroupConfirmations": {
            "type": "integer"
          },
          "toGroupConfirmations": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Contract": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          }
        }
      },
      "ContractEvent": {
        "required": [
          "blockHash",
          "contractAddress",
          "txId",
          "eventIndex",
          "fields",
          "type"
        ],
        "type": "object",
        "properties": {
          "blockHash": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "txId": {
            "type": "string"
          },
          "eventIndex": {
            "type": "integer"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Val"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ContractOutput": {
        "required": [
          "hint",
          "key",
          "alphAmount",
          "address",
          "tokens",
          "type"
        ],
        "type": "object",
        "properties": {
          "hint": {
            "type": "integer"
          },
          "key": {
            "type": "string"
          },
          "alphAmount": {
            "type": "string",
            "format": "uint256"
          },
          "address": {
            "type": "string"
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ContractState": {
        "required": [
          "address",
          "bytecode",
          "codeHash",
          "fields",
          "asset"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "bytecode": {
            "type": "string"
          },
          "codeHash": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Val"
            }
          },
          "asset": {
            "$ref": "#/components/schemas/AssetState"
          }
        }
      },
      "DecodeTransaction": {
        "required": [
          "unsignedTx"
        ],
        "type": "object",
        "properties": {
          "unsignedTx": {
            "type": "string"
          }
        }
      },
      "Destination": {
        "required": [
          "address",
          "alphAmount"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "alphAmount": {
            "type": "string",
            "format": "uint256"
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token"
            }
          },
          "lockTime": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DiscoveryAction": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/Reachable"
          },
          {
            "$ref": "#/components/schemas/Unreachable"
          }
        ],
        "discriminator": {
          "propertyName": "type"
        }
      },
      "Event": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ContractEvent"
          },
          {
            "$ref": "#/components/schemas/TxScriptEvent"
          }
        ],
        "discriminator": {
          "propertyName": "type"
        }
      },
      "EventSig": {
        "required": [
          "name",
          "signature",
          "fieldTypes"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "fieldTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Events": {
        "required": [
          "chainFrom",
          "chainTo",
          "events",
          "nextStart"
        ],
        "type": "object",
        "properties": {
          "chainFrom": {
            "type": "integer"
          },
          "chainTo": {
            "type": "integer"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "nextStart": {
            "type": "integer"
          }
        }
      },
      "FetchResponse": {
        "required": [
          "blocks"
        ],
        "type": "object",
        "properties": {
          "blocks": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BlockEntry"
              }
            }
          }
        }
      },
      "FieldsSig": {
        "required": [
          "signature",
          "types"
        ],
        "type": "object",
        "properties": {
          "signature": {
            "type": "string"
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FixedAssetOutput": {
        "required": [
          "hint",
          "key",
          "alphAmount",
          "address",
          "tokens",
          "lockTime",
          "additionalData"
        ],
        "type": "object",
        "properties": {
          "hint": {
            "type": "integer"
          },
          "key": {
            "type": "string"
          },
          "alphAmount": {
            "type": "string",
            "format": "uint256"
          },
          "address": {
            "type": "string"
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token"
            }
          },
          "lockTime": {
            "type": "integer",
            "format": "int64"
          },
          "additionalData": {
            "type": "string"
          }
        }
      },
      "FunctionSig": {
        "required": [
          "name",
          "signature",
          "argTypes",
          "returnTypes"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "argTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "returnTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Group": {
        "required": [
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "integer"
          }
        }
      },
      "HashesAtHeight": {
        "required": [
          "headers"
        ],
        "type": "object",
        "properties": {
          "headers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "InputAsset": {
        "required": [
          "address",
          "asset"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "asset": {
            "$ref": "#/components/schemas/AssetState"
          }
        }
      },
      "InterCliquePeerInfo": {
        "required": [
          "cliqueId",
          "brokerId",
          "groupNumPerBroker",
          "address",
          "isSynced",
          "clientVersion"
        ],
        "type": "object",
        "properties": {
          "cliqueId": {
            "type": "string"
          },
          "brokerId": {
            "type": "integer"
          },
          "groupNumPerBroker": {
            "type": "integer"
          },
          "address": {
            "type": "string"
          },
          "isSynced": {
            "type": "boolean"
          },
          "clientVersion": {
            "type": "string"
          }
        }
      },
      "InternalServerError": {
        "required": [
          "detail"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          }
        }
      },
      "MemPooled": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "MinerAddresses": {
        "required": [
          "addresses"
        ],
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MinerAddressesInfo": {
        "required": [
          "addresses"
        ],
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressInfo"
            }
          }
        }
      },
      "MisbehaviorAction": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/Ban"
          },
          {
            "$ref": "#/components/schemas/Unban"
          }
        ],
        "discriminator": {
          "propertyName": "type"
        }
      },
      "NodeInfo": {
        "required": [
          "buildInfo",
          "upnp"
        ],
        "type": "object",
        "properties": {
          "buildInfo": {
            "$ref": "#/components/schemas/BuildInfo"
          },
          "upnp": {
            "type": "boolean"
          },
          "externalAddress": {
            "type": "string"
          }
        }
      },
      "NodeVersion": {
        "required": [
          "version"
        ],
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/ReleaseVersion"
          }
        }
      },
      "NotFound": {
        "required": [
          "detail",
          "resource"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          }
        }
      },
      "Output": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AssetOutput"
          },
          {
            "$ref": "#/components/schemas/ContractOutput"
          }
        ],
        "discriminator": {
          "propertyName": "type"
        }
      },
      "OutputRef": {
        "required": [
          "hint",
          "key"
        ],
        "type": "object",
        "properties": {
          "hint": {
            "type": "integer"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "PeerAddress": {
        "required": [
          "address",
          "restPort",
          "wsPort",
          "minerApiPort"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "restPort": {
            "type": "integer"
          },
          "wsPort": {
            "type": "integer"
          },
          "minerApiPort": {
            "type": "integer"
          }
        }
      },
      "PeerMisbehavior": {
        "required": [
          "peer",
          "status"
        ],
        "type": "object",
        "properties": {
          "peer": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/PeerStatus"
          }
        }
      },
      "PeerStatus": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/Banned"
          },
          {
            "$ref": "#/components/schemas/Penalty"
          }
        ],
        "discriminator": {
          "propertyName": "type"
        }
      },
      "Penalty": {
        "required": [
          "value",
          "type"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Reachable": {
        "required": [
          "peers",
          "type"
        ],
        "type": "object",
        "properties": {
          "peers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ReleaseVersion": {
        "required": [
          "major",
          "minor",
          "patch"
        ],
        "type": "object",
        "properties": {
          "major": {
            "type": "integer"
          },
          "minor": {
            "type": "integer"
          },
          "patch": {
            "type": "integer"
          }
        }
      },
      "RevealMnemonic": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "RevealMnemonicResult": {
        "required": [
          "mnemonic"
        ],
        "type": "object",
        "properties": {
          "mnemonic": {
            "type": "string"
          }
        }
      },
      "Script": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          }
        }
      },
      "SelfClique": {
        "required": [
          "cliqueId",
          "nodes",
          "selfReady",
          "synced"
        ],
        "type": "object",
        "properties": {
          "cliqueId": {
            "type": "string"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PeerAddress"
            }
          },
          "selfReady": {
            "type": "boolean"
          },
          "synced": {
            "type": "boolean"
          }
        }
      },
      "ServiceUnavailable": {
        "required": [
          "detail"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          }
        }
      },
      "Sign": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          }
        }
      },
      "SignResult": {
        "required": [
          "signature"
        ],
        "type": "object",
        "properties": {
          "signature": {
            "type": "string"
          }
        }
      },
      "SubmitMultisig": {
        "required": [
          "unsignedTx",
          "signatures"
        ],
        "type": "object",
        "properties": {
          "unsignedTx": {
            "type": "string"
          },
          "signatures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SubmitTransaction": {
        "required": [
          "unsignedTx",
          "signature"
        ],
        "type": "object",
        "properties": {
          "unsignedTx": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          }
        }
      },
      "Sweep": {
        "required": [
          "toAddress"
        ],
        "type": "object",
        "properties": {
          "toAddress": {
            "type": "string"
          },
          "lockTime": {
            "type": "integer",
            "format": "int64"
          },
          "gasAmount": {
            "type": "integer"
          },
          "gasPrice": {
            "type": "string",
            "format": "uint256"
          },
          "utxosLimit": {
            "type": "integer"
          }
        }
      },
      "SweepAddressTransaction": {
        "required": [
          "txId",
          "unsignedTx",
          "gasAmount",
          "gasPrice"
        ],
        "type": "object",
        "properties": {
          "txId": {
            "type": "string"
          },
          "unsignedTx": {
            "type": "string"
          },
          "gasAmount": {
            "type": "integer"
          },
          "gasPrice": {
            "type": "string",
            "format": "uint256"
          }
        }
      },
      "TestContract": {
        "required": [
          "bytecode",
          "initialFields",
          "testArgs"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "integer"
          },
          "address": {
            "type": "string"
          },
          "bytecode": {
            "type": "string"
          },
          "initialFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Val"
            }
          },
          "initialAsset": {
            "$ref": "#/components/schemas/AssetState"
          },
          "testMethodIndex": {
            "type": "integer"
          },
          "testArgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Val"
            }
          },
          "existingContracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractState"
            }
          },
          "inputAssets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InputAsset"
            }
          }
        }
      },
      "TestContractResult": {
        "required": [
          "originalCodeHash",
          "testCodeHash",
          "returns",
          "gasUsed",
          "contracts",
          "txOutputs",
          "events"
        ],
        "type": "object",
        "properties": {
          "originalCodeHash": {
            "type": "string"
          },
          "testCodeHash": {
            "type": "string"
          },
          "returns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Val"
            }
          },
          "gasUsed": {
            "type": "integer"
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractState"
            }
          },
          "txOutputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Output"
            }
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "Token": {
        "required": [
          "id",
          "amount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "amount": {
            "type": "string",
            "format": "uint256"
          }
        }
      },
      "Transaction": {
        "required": [
          "unsigned",
          "scriptExecutionOk",
          "contractInputs",
          "generatedOutputs",
          "inputSignatures",
          "scriptSignatures"
        ],
        "type": "object",
        "properties": {
          "unsigned": {
            "$ref": "#/components/schemas/UnsignedTx"
          },
          "scriptExecutionOk": {
            "type": "boolean"
          },
          "contractInputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputRef"
            }
          },
          "generatedOutputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Output"
            }
          },
          "inputSignatures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scriptSignatures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TransactionTemplate": {
        "required": [
          "unsigned",
          "inputSignatures",
          "scriptSignatures"
        ],
        "type": "object",
        "properties": {
          "unsigned": {
            "$ref": "#/components/schemas/UnsignedTx"
          },
          "inputSignatures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scriptSignatures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Transfer": {
        "required": [
          "destinations"
        ],
        "type": "object",
        "properties": {
          "destinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Destination"
            }
          },
          "gas": {
            "type": "integer"
          },
          "gasPrice": {
            "type": "string",
            "format": "uint256"
          },
          "utxosLimit": {
            "type": "integer"
          }
        }
      },
      "TransferResult": {
        "required": [
          "txId",
          "fromGroup",
          "toGroup"
        ],
        "type": "object",
        "properties": {
          "txId": {
            "type": "string"
          },
          "fromGroup": {
            "type": "integer"
          },
          "toGroup": {
            "type": "integer"
          }
        }
      },
      "TransferResults": {
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferResult"
            }
          }
        }
      },
      "TxNotFound": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "TxResult": {
        "required": [
          "txId",
          "fromGroup",
          "toGroup"
        ],
        "type": "object",
        "properties": {
          "txId": {
            "type": "string"
          },
          "fromGroup": {
            "type": "integer"
          },
          "toGroup": {
            "type": "integer"
          }
        }
      },
      "TxScriptEvent": {
        "required": [
          "blockHash",
          "txId",
          "eventIndex",
          "fields",
          "type"
        ],
        "type": "object",
        "properties": {
          "blockHash": {
            "type": "string"
          },
          "txId": {
            "type": "string"
          },
          "eventIndex": {
            "type": "integer"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Val"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "TxStatus": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/Confirmed"
          },
          {
            "$ref": "#/components/schemas/MemPooled"
          },
          {
            "$ref": "#/components/schemas/TxNotFound"
          }
        ],
        "discriminator": {
          "propertyName": "type"
        }
      },
      "UTXO": {
        "required": [
          "ref",
          "amount",
          "tokens",
          "lockTime",
          "additionalData"
        ],
        "type": "object",
        "properties": {
          "ref": {
            "$ref": "#/components/schemas/OutputRef"
          },
          "amount": {
            "type": "string",
            "format": "uint256"
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token"
            }
          },
          "lockTime": {
            "type": "integer",
            "format": "int64"
          },
          "additionalData": {
            "type": "string"
          }
        }
      },
      "UTXOs": {
        "required": [
          "utxos"
        ],
        "type": "object",
        "properties": {
          "utxos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UTXO"
            }
          },
          "warning": {
            "type": "string"
          }
        }
      },
      "Unauthorized": {
        "required": [
          "detail"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          }
        }
      },
      "Unban": {
        "required": [
          "peers",
          "type"
        ],
        "type": "object",
        "properties": {
          "peers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "UnconfirmedTransactions": {
        "required": [
          "fromGroup",
          "toGroup",
          "unconfirmedTransactions"
        ],
        "type": "object",
        "properties": {
          "fromGroup": {
            "type": "integer"
          },
          "toGroup": {
            "type": "integer"
          },
          "unconfirmedTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionTemplate"
            }
          }
        }
      },
      "Unreachable": {
        "required": [
          "peers",
          "type"
        ],
        "type": "object",
        "properties": {
          "peers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "UnsignedTx": {
        "required": [
          "txId",
          "version",
          "networkId",
          "gasAmount",
          "gasPrice",
          "inputs",
          "fixedOutputs"
        ],
        "type": "object",
        "properties": {
          "txId": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "networkId": {
            "type": "integer"
          },
          "scriptOpt": {
            "type": "string"
          },
          "gasAmount": {
            "type": "integer"
          },
          "gasPrice": {
            "type": "string",
            "format": "uint256"
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetInput"
            }
          },
          "fixedOutputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FixedAssetOutput"
            }
          }
        }
      },
      "Val": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ValAddress"
          },
          {
            "$ref": "#/components/schemas/ValArray"
          },
          {
            "$ref": "#/components/schemas/ValBool"
          },
          {
            "$ref": "#/components/schemas/ValByteVec"
          },
          {
            "$ref": "#/components/schemas/ValI256"
          },
          {
            "$ref": "#/components/schemas/ValU256"
          }
        ],
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ValAddress": {
        "required": [
          "value",
          "type"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ValArray": {
        "required": [
          "value",
          "type"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Val"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ValBool": {
        "required": [
          "value",
          "type"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ValByteVec": {
        "required": [
          "value",
          "type"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ValI256": {
        "required": [
          "value",
          "type"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ValU256": {
        "required": [
          "value",
          "type"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uint256"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "VerifySignature": {
        "required": [
          "data",
          "signature",
          "publicKey"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          }
        }
      },
      "WalletCreation": {
        "required": [
          "password",
          "walletName"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "walletName": {
            "type": "string"
          },
          "isMiner": {
            "type": "boolean"
          },
          "mnemonicPassphrase": {
            "type": "string"
          },
          "mnemonicSize": {
            "type": "integer"
          }
        }
      },
      "WalletCreationResult": {
        "required": [
          "walletName",
          "mnemonic"
        ],
        "type": "object",
        "properties": {
          "walletName": {
            "type": "string"
          },
          "mnemonic": {
            "type": "string"
          }
        }
      },
      "WalletDeletion": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "WalletRestore": {
        "required": [
          "password",
          "mnemonic",
          "walletName"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "mnemonic": {
            "type": "string"
          },
          "walletName": {
            "type": "string"
          },
          "isMiner": {
            "type": "boolean"
          },
          "mnemonicPassphrase": {
            "type": "string"
          }
        }
      },
      "WalletRestoreResult": {
        "required": [
          "walletName"
        ],
        "type": "object",
        "properties": {
          "walletName": {
            "type": "string"
          }
        }
      },
      "WalletStatus": {
        "required": [
          "walletName",
          "locked"
        ],
        "type": "object",
        "properties": {
          "walletName": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          }
        }
      },
      "WalletUnlock": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "mnemonicPassphrase": {
            "type": "string"
          }
        }
      }
    }
  }
}